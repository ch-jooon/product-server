openapi: 3.1.0
info:
  title: 상품 API
  description: 상품 API Swagger 문서입니다.
  version: v1
servers:
  - url: http://localhost:8080
    description: 로컬 서버
tags:
  - name: 관리자 브랜드 API
    description: 관리자가 사용하는 브랜드 관리 API입니다.
  - name: 관리자 카테고리 API
    description: 관리자가 사용하는 카테고리 관리 API입니다.
  - name: 유저 카탈로그 API
    description: 상품을 특정 목적에 맞게 전시하기 위한 조회 기능을 제공하는 API입니다.
  - name: 관리자 상품 API
    description: 관리자가 사용하는 상품 관리 API입니다.
paths:
  /api/v1/admin/products:
    post:
      tags:
        - 관리자 상품 API
      summary: 상품 생성
      description: 상품을 생성하는 API입니다.
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminProductCreateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseProduct'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/v1/admin/brands:
    get:
      tags:
        - 관리자 브랜드 API
      summary: 브랜드 전체 조회
      description: 브랜드 전체를 조회하는 API입니다.
      operationId: getBrands
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListBrand'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
        - 관리자 브랜드 API
      summary: 브랜드 생성
      description: 브랜드를 생성하는 API입니다.
      operationId: createBrand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminBrandCreateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBrand'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/v1/admin/products/{id}:
    delete:
      tags:
        - 관리자 상품 API
      summary: 상품 삭제
      description: 상품을 삭제하는 API입니다.
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseProduct'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
    patch:
      tags:
        - 관리자 상품 API
      summary: 상품 수정
      description: 상품을 수정하는 API입니다.
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminProductUpdateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseProduct'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/v1/admin/brands/{id}:
    delete:
      tags:
        - 관리자 브랜드 API
      summary: 브랜드 삭제
      description: 브랜드를 삭제하는 API입니다.
      operationId: deleteBrand
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBrand'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
    patch:
      tags:
        - 관리자 브랜드 API
      summary: 브랜드 수정
      description: 브랜드를 수정하는 API입니다.
      operationId: updateBrand
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminBrandUpdateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBrand'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/v1/catalogs/cheapest-products/categories:
    get:
      tags:
        - 유저 카탈로그 API
      summary: 카테고리 별 최저가격 카탈로그 조회
      description: 카테고리 별 최저가격 브랜드와 상품 가격, 총액을 조회하는 API입니다.
      operationId: getCheapestByCategory
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseCheapestCategoryResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/v1/catalogs/cheapest-products/brand:
    get:
      tags:
        - 유저 카탈로그 API
      summary: 모든 카테고리 포함 최저가격 브랜드 카탈로그 조회
      description: 단일 브랜드로 모든 카테고리 상품을 구매할 때 최저가격에 판매하는 브랜드와 카테고리의 상품가격, 총액을 조회하는 API입니다.
      operationId: getCheapestBySingleBrand
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseCheapestBrandResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/v1/catalogs/cheapest-expensive-products/categories/{categoryName}:
    get:
      tags:
        - 유저 카탈로그 API
      summary: 카테고리 별 최저, 최고 가격 카탈로그 조회
      description: 카테고리 별 최저, 최고 가격 브랜드와 상품 가격을 조회하는 API입니다.
      operationId: getCheapestExpensiveByCategoryName
      parameters:
        - name: categoryName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePriceRangeCategoryResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/v1/admin/categories:
    get:
      tags:
        - 관리자 카테고리 API
      summary: 카테고리 전체 조회
      description: 카테고리 전체를 조회하는 API입니다.
      operationId: getCategories
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListCategory'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        data:
          type: object
        error:
          $ref: '#/components/schemas/ErrorResponse'
    ErrorResponse:
      type: object
      properties:
        httpCode:
          type: integer
          format: int32
        message:
          type: string
      required:
        - httpCode
    AdminProductCreateRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        brandId:
          type: integer
          format: int64
        categoryId:
          type: integer
          format: int64
        price:
          type: integer
          format: int32
          minimum: 0
      required:
        - brandId
        - categoryId
        - name
        - price
    ApiResponseProduct:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Product'
        error:
          $ref: '#/components/schemas/ErrorResponse'
    Brand:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
      required:
        - createdAt
        - id
        - name
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
      required:
        - createdAt
        - id
        - name
    Price:
      type: object
      properties:
        value:
          type: integer
          format: int64
      required:
        - value
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          $ref: '#/components/schemas/Price'
        brand:
          $ref: '#/components/schemas/Brand'
        category:
          $ref: '#/components/schemas/Category'
        createdAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
      required:
        - brand
        - category
        - createdAt
        - id
        - name
        - price
    AdminBrandCreateRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
      required:
        - name
    ApiResponseBrand:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Brand'
        error:
          $ref: '#/components/schemas/ErrorResponse'
    AdminProductUpdateRequest:
      type: object
      properties:
        name:
          type: string
        brandId:
          type: integer
          format: int64
        categoryId:
          type: integer
          format: int64
        price:
          type: integer
          format: int32
    AdminBrandUpdateRequest:
      type: object
      properties:
        name:
          type: string
    ApiResponseCheapestCategoryResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CheapestCategoryResponse'
        error:
          $ref: '#/components/schemas/ErrorResponse'
    CheapestCategoryResponse:
      type: object
      properties:
        head:
          type: array
          items:
            type: string
        body:
          type: array
          items:
            $ref: '#/components/schemas/ProductResponse'
        tail:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
      required:
        - body
        - head
        - tail
    ProductResponse:
      type: object
      properties:
        카테고리:
          type: string
        브랜드:
          type: string
        가격:
          type: string
    ApiResponseCheapestBrandResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CheapestBrandResponse'
        error:
          $ref: '#/components/schemas/ErrorResponse'
    CheapestBrandModel:
      type: object
      properties:
        브랜드:
          type: string
        카테고리:
          type: array
          items:
            $ref: '#/components/schemas/ProductResponse'
        총액:
          type: string
      required:
        - 브랜드
        - 총액
        - 카테고리
    CheapestBrandResponse:
      type: object
      properties:
        최저가:
          $ref: '#/components/schemas/CheapestBrandModel'
      required:
        - 최저가
    ApiResponsePriceRangeCategoryResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PriceRangeCategoryResponse'
        error:
          $ref: '#/components/schemas/ErrorResponse'
    PriceRangeCategoryResponse:
      type: object
      properties:
        카테고리:
          type: string
        최저가:
          type: array
          items:
            $ref: '#/components/schemas/ProductResponse'
        최고가:
          type: array
          items:
            $ref: '#/components/schemas/ProductResponse'
      required:
        - 최고가
        - 최저가
        - 카테고리
    ApiResponseListCategory:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        error:
          $ref: '#/components/schemas/ErrorResponse'
    ApiResponseListBrand:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Brand'
        error:
          $ref: '#/components/schemas/ErrorResponse'